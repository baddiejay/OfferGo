--TEST INSERTIONS

INSERT INTO COMUNI VALUES('NA','Napoli');
INSERT INTO NEGOZI VALUES('Negozio1','a','a','a','a','a','a','a','Casoria','NA','a',0,0,0,'a','a');
INSERT INTO NEGOZI VALUES('Negozio2','b','b','b','b','b','b','b','Casoria','NA','b',0,0,0,'b','b');
INSERT INTO NEGOZI VALUES('Negozio3','c','c','c','c','c','c','c','Nola','NA','c',0,0,0,'c','c');
INSERT INTO NEGOZI VALUES('Negozio4','d','d','d','d','d','d','d','Nocera','NA','d',0,0,0,'d','d');
INSERT INTO CATEGORIE VALUES(1,'Categoria1','Sottocategoria1');
INSERT INTO CATEGORIE VALUES(2,'Categoria2','Sottocategoria2');
INSERT INTO CATEGORIE VALUES(3,'Categoria3','Sottocategoria3');
INSERT INTO PRODOTTI VALUES(1,'Prodotto1','a',1);
INSERT INTO PRODOTTI VALUES(2,'Prodotto2','b',1);
INSERT INTO PRODOTTI VALUES(3,'Prodotto3','c',1);
INSERT INTO PRODOTTI VALUES(4,'Prodotto4','d',2);
INSERT INTO PRODOTTI VALUES(5,'Prodotto5','e',2);
INSERT INTO PRODOTTI VALUES(6,'Prodotto6','f',3);
INSERT INTO HASHTAG VALUES('hashtag1');
INSERT INTO HASHTAG VALUES('hashtag2');
INSERT INTO HASHTAG VALUES('hashtag3');
INSERT INTO OFFERTE VALUES(1,'1-Nov-2019','4-Nov-2019','a','a');
INSERT INTO OFFERTE VALUES(2,'2-Nov-2019','5-Nov-2019','b','b');
INSERT INTO OFFERTE VALUES(3,'3-Nov-2019','6-Nov-2019','c','c');
INSERT INTO OFFERTE VALUES(4,'4-Nov-2019','7-Nov-2019','d','d');
INSERT INTO OFFERTE VALUES(5,'5-Nov-2019','8-Nov-2019','e','e');
INSERT INTO NEG_OFF_HASH VALUES('Negozio1',1,'hashtag1');
INSERT INTO NEG_OFF_HASH VALUES('Negozio1',2,'hashtag2');
INSERT INTO NEG_OFF_HASH VALUES('Negozio1',3,'hashtag1');
INSERT INTO NEG_OFF_HASH VALUES('Negozio2',4,'hashtag2');
INSERT INTO NEG_OFF_HASH VALUES('Negozio3',5,'hashtag1');
INSERT INTO OFFERTE_PRODOTTI VALUES(1,1,100,90,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(1,2,100,90,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(1,3,100,50,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(2,1,100,50,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(2,3,100,80,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(2,6,100,70,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(3,3,100,90,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(4,4,100,40,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(4,1,100,60,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(5,4,100,20,'Buono');
INSERT INTO OFFERTE_PRODOTTI VALUES(5,5,100,10,'Buono');
INSERT INTO CLIENTI VALUES('Cliente1','a','a','a','NA','a','a');
INSERT INTO CLIENTI VALUES('Cliente2','b','b','b','NA','b','b');
INSERT INTO CLIENTI VALUES('Cliente3','c','c','c','NA','c','c');
INSERT INTO FEEDBACK VALUES(1,'Cliente1',1,5,'a');
INSERT INTO FEEDBACK VALUES(2,'Cliente1',2,3,'b');
INSERT INTO FEEDBACK VALUES(3,'Cliente2',3,4,'c');
INSERT INTO FEEDBACK VALUES(4,'Cliente3',4,2,'d');
INSERT INTO FEEDBACK VALUES(5,'Cliente2',5,4,'e');
INSERT INTO FEEDBACK VALUES(6,'Cliente3',2,4,'f');
INSERT INTO FEEDBACK VALUES(7,'Cliente3',3,3,'g');
INSERT INTO FEEDBACK VALUES(8,'Cliente3',5,4,'h');




--Number of offers for each city
CREATE OR REPLACE VIEW NUM_OFFERTE_PER_CITTA
AS
SELECT N.CITTA, COUNT(*) AS NUM_OFFERTE
FROM NEGOZI N, NEG_OFF_HASH NO
WHERE N.USERNAME = NO.NEGOZIO
GROUP BY N.CITTA
ORDER BY N.CITTA;

--Number of offers for each hashtag
CREATE OR REPLACE VIEW NUM_OFFERTE_PER_HASHTAG
AS
SELECT HASHTAG, COUNT(*) AS NUM_OFFERTE
FROM NEG_OFF_HASH
GROUP BY HASHTAG
ORDER BY HASHTAG;

--Number of offers for each product category
CREATE OR REPLACE VIEW NUM_OFFERTE_PER_CATEGORIA
AS
SELECT C.NOME AS CATEGORIA, COUNT(*) AS NUM_OFFERTE
FROM CATEGORIE C, PRODOTTI P, OFFERTE_PRODOTTI OP
WHERE OP.PRODOTTO = P.ID AND P.CATEGORIA = C.ID
GROUP BY C.NOME
ORDER BY C.NOME;

--Number of feedback for each hashtag
CREATE OR REPLACE VIEW NUM_FEEDBACK_PER_HASHTAG
AS
SELECT NG.HASHTAG, COUNT(*) AS NUM_FEEDBACK
FROM NEG_OFF_HASH NG, FEEDBACK F
WHERE NG.OFFERTA = F.OFFERTA
GROUP BY NG.HASHTAG
ORDER BY NG.HASHTAG;

--Category with more active offers
CREATE OR REPLACE VIEW CATEGORIA_CON_MAX_OFFERTE
AS
SELECT C.NOME AS CATEGORIA, COUNT(*) AS NUM_OFFERTE
FROM CATEGORIE C, PRODOTTI P, OFFERTE_PRODOTTI OP
WHERE OP.PRODOTTO = P.ID AND P.CATEGORIA = C.ID
GROUP BY C.NOME
HAVING COUNT(*) >= ALL
(SELECT COUNT(*)
FROM CATEGORIE C1, PRODOTTI P1, OFFERTE_PRODOTTI OP1
WHERE OP1.PRODOTTO = P1.ID AND P1.CATEGORIA = C1.ID
GROUP BY C1.NOME);

--Store with the most offers ever
CREATE OR REPLACE VIEW NEGOZIO_CON_MAX_OFFERTE
AS
SELECT N.USERNAME, COUNT(*) AS NUM_OFFERTE
FROM NEG_OFF_HASH NO, NEGOZI N
WHERE NO.NEGOZIO = N.USERNAME 
GROUP BY NEGOZIO
HAVING COUNT(*) >= ALL
(SELECT COUNT(*)
FROM NEG_OFF_HASH
GROUP BY NEGOZIO)

--Average feedback from each store
CREATE OR REPLACE VIEW AVG_FEEDBACK_PER_NEGOZIO
AS
SELECT N.USERNAME AS NEGOZIO, AVG(F.VOTO) AS MEDIA_FEEDBACK
FROM NEGOZI N, NEG_OFF_HASH NO, FEEDBACK F
WHERE N.USERNAME = NO.NEGOZIO AND F.OFFERTA = NO.OFFERTA
GROUP BY N.USERNAME
ORDER BY N.USERNAME;

--Average feedback for each offer
CREATE OR REPLACE VIEW AVG_FEEDBACK_PER_OFFERTA
AS
SELECT O.ID AS OFFERTA, O.NOTE, AVG(F.VOTO) AS MEDIA_FEEDBACK
FROM OFFERTE O, FEEDBACK F
WHERE O.ID = F.OFFERTA
GROUP BY O.ID, O.NOTE
ORDER BY O.ID;

--Store with more offers for each product category 
--(Incomplete query, the following view returns the number of offers of each store related to each category, we need to create a second query that works on this view to get the store with more offers related to each category)
CREATE OR REPLACE VIEW OFFERTE_CATEGORIA_NEGOZI
AS
SELECT C.NOME, N.USERNAME, COUNT(*) AS NUM_OFFERTE
FROM CATEGORIE C, PRODOTTI P, OFFERTE_PRODOTTI OP, NEG_OFF_HASH NO, NEGOZI N
WHERE C.ID = P.CATEGORIA AND P.ID = OP.PRODOTTO AND NO.OFFERTA = OP.OFFERTA AND NO.NEGOZIO = N.USERNAME
GROUP BY C.NOME, N.USERNAME;

--Number of registered stores
CREATE OR REPLACE VIEW NUM_NEGOZI_REGISTRATI
AS
SELECT COUNT(*) AS NUM_NEGOZI
FROM NEGOZI;

--Number of registered customers
CREATE OR REPLACE VIEW NUM_CLIENTI_REGISTRATI
AS
SELECT COUNT(*) AS NUM_CLIENTI
FROM CLIENTI;

--Number of stores for each city
CREATE OR REPLACE VIEW NUM_NEGOZI_PER_CITTA
AS
SELECT CITTA, COUNT(*) AS NUM_NEGOZI
FROM NEGOZI
GROUP BY CITTA;

--Number of stores by type
CREATE OR REPLACE VIEW NUM_NEGOZI_PER_TIPO
AS
SELECT TIPOLOGIA, COUNT(*) AS NUM_NEGOZI
FROM NEGOZI
GROUP BY CITTA;

--Number of customers per municipality
CREATE OR REPLACE VIEW NUM_CLIENTI_PER_COMUNE
AS
SELECT COMUNE, COUNT(*) AS NUM_CLIENTI
FROM CLIENTI
GROUP BY COMUNE;